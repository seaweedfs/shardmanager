// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: shardmanager.proto

package shardmanagerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location      string                 `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Capacity      int64                  `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_shardmanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Node) GetCapacity() int64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Node) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Shard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	NodeId        string                 `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Shard) Reset() {
	*x = Shard{}
	mi := &file_shardmanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Shard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shard) ProtoMessage() {}

func (x *Shard) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shard.ProtoReflect.Descriptor instead.
func (*Shard) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{1}
}

func (x *Shard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Shard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Shard) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Shard) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Shard) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// NodeService messages
type RegisterNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_shardmanager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterNodeRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type RegisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_shardmanager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Load          int64                  `protobuf:"varint,3,opt,name=load,proto3" json:"load,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_shardmanager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *HeartbeatRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HeartbeatRequest) GetLoad() int64 {
	if x != nil {
		return x.Load
	}
	return 0
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_shardmanager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_shardmanager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{6}
}

type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_shardmanager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{7}
}

func (x *ListNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// ShardService messages
type RegisterShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shard         *Shard                 `protobuf:"bytes,1,opt,name=shard,proto3" json:"shard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterShardRequest) Reset() {
	*x = RegisterShardRequest{}
	mi := &file_shardmanager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterShardRequest) ProtoMessage() {}

func (x *RegisterShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterShardRequest.ProtoReflect.Descriptor instead.
func (*RegisterShardRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterShardRequest) GetShard() *Shard {
	if x != nil {
		return x.Shard
	}
	return nil
}

type RegisterShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterShardResponse) Reset() {
	*x = RegisterShardResponse{}
	mi := &file_shardmanager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterShardResponse) ProtoMessage() {}

func (x *RegisterShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterShardResponse.ProtoReflect.Descriptor instead.
func (*RegisterShardResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterShardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterShardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListShardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListShardsRequest) Reset() {
	*x = ListShardsRequest{}
	mi := &file_shardmanager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardsRequest) ProtoMessage() {}

func (x *ListShardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardsRequest.ProtoReflect.Descriptor instead.
func (*ListShardsRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{10}
}

type ListShardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shards        []*Shard               `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListShardsResponse) Reset() {
	*x = ListShardsResponse{}
	mi := &file_shardmanager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardsResponse) ProtoMessage() {}

func (x *ListShardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardsResponse.ProtoReflect.Descriptor instead.
func (*ListShardsResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{11}
}

func (x *ListShardsResponse) GetShards() []*Shard {
	if x != nil {
		return x.Shards
	}
	return nil
}

type GetShardInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShardInfoRequest) Reset() {
	*x = GetShardInfoRequest{}
	mi := &file_shardmanager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardInfoRequest) ProtoMessage() {}

func (x *GetShardInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardInfoRequest.ProtoReflect.Descriptor instead.
func (*GetShardInfoRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{12}
}

func (x *GetShardInfoRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

type GetShardInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shard         *Shard                 `protobuf:"bytes,1,opt,name=shard,proto3" json:"shard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShardInfoResponse) Reset() {
	*x = GetShardInfoResponse{}
	mi := &file_shardmanager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardInfoResponse) ProtoMessage() {}

func (x *GetShardInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardInfoResponse.ProtoReflect.Descriptor instead.
func (*GetShardInfoResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{13}
}

func (x *GetShardInfoResponse) GetShard() *Shard {
	if x != nil {
		return x.Shard
	}
	return nil
}

type AssignShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignShardRequest) Reset() {
	*x = AssignShardRequest{}
	mi := &file_shardmanager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignShardRequest) ProtoMessage() {}

func (x *AssignShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignShardRequest.ProtoReflect.Descriptor instead.
func (*AssignShardRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{14}
}

func (x *AssignShardRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *AssignShardRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type AssignShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignShardResponse) Reset() {
	*x = AssignShardResponse{}
	mi := &file_shardmanager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignShardResponse) ProtoMessage() {}

func (x *AssignShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignShardResponse.ProtoReflect.Descriptor instead.
func (*AssignShardResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{15}
}

func (x *AssignShardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AssignShardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MigrateShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	FromNodeId    string                 `protobuf:"bytes,2,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId      string                 `protobuf:"bytes,3,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MigrateShardRequest) Reset() {
	*x = MigrateShardRequest{}
	mi := &file_shardmanager_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateShardRequest) ProtoMessage() {}

func (x *MigrateShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateShardRequest.ProtoReflect.Descriptor instead.
func (*MigrateShardRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{16}
}

func (x *MigrateShardRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *MigrateShardRequest) GetFromNodeId() string {
	if x != nil {
		return x.FromNodeId
	}
	return ""
}

func (x *MigrateShardRequest) GetToNodeId() string {
	if x != nil {
		return x.ToNodeId
	}
	return ""
}

type MigrateShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MigrateShardResponse) Reset() {
	*x = MigrateShardResponse{}
	mi := &file_shardmanager_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateShardResponse) ProtoMessage() {}

func (x *MigrateShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateShardResponse.ProtoReflect.Descriptor instead.
func (*MigrateShardResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{17}
}

func (x *MigrateShardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MigrateShardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateShardStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateShardStatusRequest) Reset() {
	*x = UpdateShardStatusRequest{}
	mi := &file_shardmanager_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateShardStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShardStatusRequest) ProtoMessage() {}

func (x *UpdateShardStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShardStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateShardStatusRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateShardStatusRequest) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *UpdateShardStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateShardStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateShardStatusResponse) Reset() {
	*x = UpdateShardStatusResponse{}
	mi := &file_shardmanager_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateShardStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShardStatusResponse) ProtoMessage() {}

func (x *UpdateShardStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShardStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateShardStatusResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateShardStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateShardStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// PolicyService messages
type SetPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyType    string                 `protobuf:"bytes,1,opt,name=policy_type,json=policyType,proto3" json:"policy_type,omitempty"`
	Parameters    string                 `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPolicyRequest) Reset() {
	*x = SetPolicyRequest{}
	mi := &file_shardmanager_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPolicyRequest) ProtoMessage() {}

func (x *SetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPolicyRequest.ProtoReflect.Descriptor instead.
func (*SetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{20}
}

func (x *SetPolicyRequest) GetPolicyType() string {
	if x != nil {
		return x.PolicyType
	}
	return ""
}

func (x *SetPolicyRequest) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

type SetPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPolicyResponse) Reset() {
	*x = SetPolicyResponse{}
	mi := &file_shardmanager_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPolicyResponse) ProtoMessage() {}

func (x *SetPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPolicyResponse.ProtoReflect.Descriptor instead.
func (*SetPolicyResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{21}
}

func (x *SetPolicyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetPolicyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyType    string                 `protobuf:"bytes,1,opt,name=policy_type,json=policyType,proto3" json:"policy_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyRequest) Reset() {
	*x = GetPolicyRequest{}
	mi := &file_shardmanager_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyRequest) ProtoMessage() {}

func (x *GetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{22}
}

func (x *GetPolicyRequest) GetPolicyType() string {
	if x != nil {
		return x.PolicyType
	}
	return ""
}

type GetPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyType    string                 `protobuf:"bytes,1,opt,name=policy_type,json=policyType,proto3" json:"policy_type,omitempty"`
	Parameters    string                 `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyResponse) Reset() {
	*x = GetPolicyResponse{}
	mi := &file_shardmanager_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyResponse) ProtoMessage() {}

func (x *GetPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPolicyResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{23}
}

func (x *GetPolicyResponse) GetPolicyType() string {
	if x != nil {
		return x.PolicyType
	}
	return ""
}

func (x *GetPolicyResponse) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

// MonitoringService messages
type GetDistributionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDistributionRequest) Reset() {
	*x = GetDistributionRequest{}
	mi := &file_shardmanager_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDistributionRequest) ProtoMessage() {}

func (x *GetDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDistributionRequest.ProtoReflect.Descriptor instead.
func (*GetDistributionRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{24}
}

type GetDistributionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeShards    map[string]*ShardList  `protobuf:"bytes,1,rep,name=node_shards,json=nodeShards,proto3" json:"node_shards,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDistributionResponse) Reset() {
	*x = GetDistributionResponse{}
	mi := &file_shardmanager_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDistributionResponse) ProtoMessage() {}

func (x *GetDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDistributionResponse.ProtoReflect.Descriptor instead.
func (*GetDistributionResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{25}
}

func (x *GetDistributionResponse) GetNodeShards() map[string]*ShardList {
	if x != nil {
		return x.NodeShards
	}
	return nil
}

type ShardList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardIds      []string               `protobuf:"bytes,1,rep,name=shard_ids,json=shardIds,proto3" json:"shard_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardList) Reset() {
	*x = ShardList{}
	mi := &file_shardmanager_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardList) ProtoMessage() {}

func (x *ShardList) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardList.ProtoReflect.Descriptor instead.
func (*ShardList) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{26}
}

func (x *ShardList) GetShardIds() []string {
	if x != nil {
		return x.ShardIds
	}
	return nil
}

type GetHealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthRequest) Reset() {
	*x = GetHealthRequest{}
	mi := &file_shardmanager_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthRequest) ProtoMessage() {}

func (x *GetHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthRequest.ProtoReflect.Descriptor instead.
func (*GetHealthRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{27}
}

type GetHealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthResponse) Reset() {
	*x = GetHealthResponse{}
	mi := &file_shardmanager_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthResponse) ProtoMessage() {}

func (x *GetHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthResponse.ProtoReflect.Descriptor instead.
func (*GetHealthResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{28}
}

func (x *GetHealthResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

// FailureService messages
type ReportFailureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportFailureRequest) Reset() {
	*x = ReportFailureRequest{}
	mi := &file_shardmanager_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportFailureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFailureRequest) ProtoMessage() {}

func (x *ReportFailureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFailureRequest.ProtoReflect.Descriptor instead.
func (*ReportFailureRequest) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{29}
}

func (x *ReportFailureRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReportFailureRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReportFailureRequest) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type ReportFailureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportFailureResponse) Reset() {
	*x = ReportFailureResponse{}
	mi := &file_shardmanager_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportFailureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFailureResponse) ProtoMessage() {}

func (x *ReportFailureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shardmanager_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFailureResponse.ProtoReflect.Descriptor instead.
func (*ReportFailureResponse) Descriptor() ([]byte, []int) {
	return file_shardmanager_proto_rawDescGZIP(), []int{30}
}

func (x *ReportFailureResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportFailureResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_shardmanager_proto protoreflect.FileDescriptor

const file_shardmanager_proto_rawDesc = "" +
	"\n" +
	"\x12shardmanager.proto\x12\x0eshardmanagerpb\"f\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x12\x1a\n" +
	"\bcapacity\x18\x03 \x01(\x03R\bcapacity\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"p\n" +
	"\x05Shard\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\"?\n" +
	"\x13RegisterNodeRequest\x12(\n" +
	"\x04node\x18\x01 \x01(\v2\x14.shardmanagerpb.NodeR\x04node\"J\n" +
	"\x14RegisterNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"W\n" +
	"\x10HeartbeatRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x12\n" +
	"\x04load\x18\x03 \x01(\x03R\x04load\"-\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x12\n" +
	"\x10ListNodesRequest\"?\n" +
	"\x11ListNodesResponse\x12*\n" +
	"\x05nodes\x18\x01 \x03(\v2\x14.shardmanagerpb.NodeR\x05nodes\"C\n" +
	"\x14RegisterShardRequest\x12+\n" +
	"\x05shard\x18\x01 \x01(\v2\x15.shardmanagerpb.ShardR\x05shard\"K\n" +
	"\x15RegisterShardResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x13\n" +
	"\x11ListShardsRequest\"C\n" +
	"\x12ListShardsResponse\x12-\n" +
	"\x06shards\x18\x01 \x03(\v2\x15.shardmanagerpb.ShardR\x06shards\"0\n" +
	"\x13GetShardInfoRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\"C\n" +
	"\x14GetShardInfoResponse\x12+\n" +
	"\x05shard\x18\x01 \x01(\v2\x15.shardmanagerpb.ShardR\x05shard\"H\n" +
	"\x12AssignShardRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\"I\n" +
	"\x13AssignShardResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"p\n" +
	"\x13MigrateShardRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\x12 \n" +
	"\ffrom_node_id\x18\x02 \x01(\tR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x03 \x01(\tR\btoNodeId\"J\n" +
	"\x14MigrateShardResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"M\n" +
	"\x18UpdateShardStatusRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"O\n" +
	"\x19UpdateShardStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"S\n" +
	"\x10SetPolicyRequest\x12\x1f\n" +
	"\vpolicy_type\x18\x01 \x01(\tR\n" +
	"policyType\x12\x1e\n" +
	"\n" +
	"parameters\x18\x02 \x01(\tR\n" +
	"parameters\"G\n" +
	"\x11SetPolicyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"3\n" +
	"\x10GetPolicyRequest\x12\x1f\n" +
	"\vpolicy_type\x18\x01 \x01(\tR\n" +
	"policyType\"T\n" +
	"\x11GetPolicyResponse\x12\x1f\n" +
	"\vpolicy_type\x18\x01 \x01(\tR\n" +
	"policyType\x12\x1e\n" +
	"\n" +
	"parameters\x18\x02 \x01(\tR\n" +
	"parameters\"\x18\n" +
	"\x16GetDistributionRequest\"\xcd\x01\n" +
	"\x17GetDistributionResponse\x12X\n" +
	"\vnode_shards\x18\x01 \x03(\v27.shardmanagerpb.GetDistributionResponse.NodeShardsEntryR\n" +
	"nodeShards\x1aX\n" +
	"\x0fNodeShardsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.shardmanagerpb.ShardListR\x05value:\x028\x01\"(\n" +
	"\tShardList\x12\x1b\n" +
	"\tshard_ids\x18\x01 \x03(\tR\bshardIds\"\x12\n" +
	"\x10GetHealthRequest\"-\n" +
	"\x11GetHealthResponse\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\"T\n" +
	"\x14ReportFailureRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"K\n" +
	"\x15ReportFailureResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x8c\x02\n" +
	"\vNodeService\x12Y\n" +
	"\fRegisterNode\x12#.shardmanagerpb.RegisterNodeRequest\x1a$.shardmanagerpb.RegisterNodeResponse\x12P\n" +
	"\tHeartbeat\x12 .shardmanagerpb.HeartbeatRequest\x1a!.shardmanagerpb.HeartbeatResponse\x12P\n" +
	"\tListNodes\x12 .shardmanagerpb.ListNodesRequest\x1a!.shardmanagerpb.ListNodesResponse2\xb9\x04\n" +
	"\fShardService\x12\\\n" +
	"\rRegisterShard\x12$.shardmanagerpb.RegisterShardRequest\x1a%.shardmanagerpb.RegisterShardResponse\x12S\n" +
	"\n" +
	"ListShards\x12!.shardmanagerpb.ListShardsRequest\x1a\".shardmanagerpb.ListShardsResponse\x12Y\n" +
	"\fGetShardInfo\x12#.shardmanagerpb.GetShardInfoRequest\x1a$.shardmanagerpb.GetShardInfoResponse\x12V\n" +
	"\vAssignShard\x12\".shardmanagerpb.AssignShardRequest\x1a#.shardmanagerpb.AssignShardResponse\x12Y\n" +
	"\fMigrateShard\x12#.shardmanagerpb.MigrateShardRequest\x1a$.shardmanagerpb.MigrateShardResponse\x12h\n" +
	"\x11UpdateShardStatus\x12(.shardmanagerpb.UpdateShardStatusRequest\x1a).shardmanagerpb.UpdateShardStatusResponse2\xb3\x01\n" +
	"\rPolicyService\x12P\n" +
	"\tSetPolicy\x12 .shardmanagerpb.SetPolicyRequest\x1a!.shardmanagerpb.SetPolicyResponse\x12P\n" +
	"\tGetPolicy\x12 .shardmanagerpb.GetPolicyRequest\x1a!.shardmanagerpb.GetPolicyResponse2\xc9\x01\n" +
	"\x11MonitoringService\x12b\n" +
	"\x0fGetDistribution\x12&.shardmanagerpb.GetDistributionRequest\x1a'.shardmanagerpb.GetDistributionResponse\x12P\n" +
	"\tGetHealth\x12 .shardmanagerpb.GetHealthRequest\x1a!.shardmanagerpb.GetHealthResponse2n\n" +
	"\x0eFailureService\x12\\\n" +
	"\rReportFailure\x12$.shardmanagerpb.ReportFailureRequest\x1a%.shardmanagerpb.ReportFailureResponseB2Z0github.com/seaweedfs/shardmanager/shardmanagerpbb\x06proto3"

var (
	file_shardmanager_proto_rawDescOnce sync.Once
	file_shardmanager_proto_rawDescData []byte
)

func file_shardmanager_proto_rawDescGZIP() []byte {
	file_shardmanager_proto_rawDescOnce.Do(func() {
		file_shardmanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shardmanager_proto_rawDesc), len(file_shardmanager_proto_rawDesc)))
	})
	return file_shardmanager_proto_rawDescData
}

var file_shardmanager_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_shardmanager_proto_goTypes = []any{
	(*Node)(nil),                      // 0: shardmanagerpb.Node
	(*Shard)(nil),                     // 1: shardmanagerpb.Shard
	(*RegisterNodeRequest)(nil),       // 2: shardmanagerpb.RegisterNodeRequest
	(*RegisterNodeResponse)(nil),      // 3: shardmanagerpb.RegisterNodeResponse
	(*HeartbeatRequest)(nil),          // 4: shardmanagerpb.HeartbeatRequest
	(*HeartbeatResponse)(nil),         // 5: shardmanagerpb.HeartbeatResponse
	(*ListNodesRequest)(nil),          // 6: shardmanagerpb.ListNodesRequest
	(*ListNodesResponse)(nil),         // 7: shardmanagerpb.ListNodesResponse
	(*RegisterShardRequest)(nil),      // 8: shardmanagerpb.RegisterShardRequest
	(*RegisterShardResponse)(nil),     // 9: shardmanagerpb.RegisterShardResponse
	(*ListShardsRequest)(nil),         // 10: shardmanagerpb.ListShardsRequest
	(*ListShardsResponse)(nil),        // 11: shardmanagerpb.ListShardsResponse
	(*GetShardInfoRequest)(nil),       // 12: shardmanagerpb.GetShardInfoRequest
	(*GetShardInfoResponse)(nil),      // 13: shardmanagerpb.GetShardInfoResponse
	(*AssignShardRequest)(nil),        // 14: shardmanagerpb.AssignShardRequest
	(*AssignShardResponse)(nil),       // 15: shardmanagerpb.AssignShardResponse
	(*MigrateShardRequest)(nil),       // 16: shardmanagerpb.MigrateShardRequest
	(*MigrateShardResponse)(nil),      // 17: shardmanagerpb.MigrateShardResponse
	(*UpdateShardStatusRequest)(nil),  // 18: shardmanagerpb.UpdateShardStatusRequest
	(*UpdateShardStatusResponse)(nil), // 19: shardmanagerpb.UpdateShardStatusResponse
	(*SetPolicyRequest)(nil),          // 20: shardmanagerpb.SetPolicyRequest
	(*SetPolicyResponse)(nil),         // 21: shardmanagerpb.SetPolicyResponse
	(*GetPolicyRequest)(nil),          // 22: shardmanagerpb.GetPolicyRequest
	(*GetPolicyResponse)(nil),         // 23: shardmanagerpb.GetPolicyResponse
	(*GetDistributionRequest)(nil),    // 24: shardmanagerpb.GetDistributionRequest
	(*GetDistributionResponse)(nil),   // 25: shardmanagerpb.GetDistributionResponse
	(*ShardList)(nil),                 // 26: shardmanagerpb.ShardList
	(*GetHealthRequest)(nil),          // 27: shardmanagerpb.GetHealthRequest
	(*GetHealthResponse)(nil),         // 28: shardmanagerpb.GetHealthResponse
	(*ReportFailureRequest)(nil),      // 29: shardmanagerpb.ReportFailureRequest
	(*ReportFailureResponse)(nil),     // 30: shardmanagerpb.ReportFailureResponse
	nil,                               // 31: shardmanagerpb.GetDistributionResponse.NodeShardsEntry
}
var file_shardmanager_proto_depIdxs = []int32{
	0,  // 0: shardmanagerpb.RegisterNodeRequest.node:type_name -> shardmanagerpb.Node
	0,  // 1: shardmanagerpb.ListNodesResponse.nodes:type_name -> shardmanagerpb.Node
	1,  // 2: shardmanagerpb.RegisterShardRequest.shard:type_name -> shardmanagerpb.Shard
	1,  // 3: shardmanagerpb.ListShardsResponse.shards:type_name -> shardmanagerpb.Shard
	1,  // 4: shardmanagerpb.GetShardInfoResponse.shard:type_name -> shardmanagerpb.Shard
	31, // 5: shardmanagerpb.GetDistributionResponse.node_shards:type_name -> shardmanagerpb.GetDistributionResponse.NodeShardsEntry
	26, // 6: shardmanagerpb.GetDistributionResponse.NodeShardsEntry.value:type_name -> shardmanagerpb.ShardList
	2,  // 7: shardmanagerpb.NodeService.RegisterNode:input_type -> shardmanagerpb.RegisterNodeRequest
	4,  // 8: shardmanagerpb.NodeService.Heartbeat:input_type -> shardmanagerpb.HeartbeatRequest
	6,  // 9: shardmanagerpb.NodeService.ListNodes:input_type -> shardmanagerpb.ListNodesRequest
	8,  // 10: shardmanagerpb.ShardService.RegisterShard:input_type -> shardmanagerpb.RegisterShardRequest
	10, // 11: shardmanagerpb.ShardService.ListShards:input_type -> shardmanagerpb.ListShardsRequest
	12, // 12: shardmanagerpb.ShardService.GetShardInfo:input_type -> shardmanagerpb.GetShardInfoRequest
	14, // 13: shardmanagerpb.ShardService.AssignShard:input_type -> shardmanagerpb.AssignShardRequest
	16, // 14: shardmanagerpb.ShardService.MigrateShard:input_type -> shardmanagerpb.MigrateShardRequest
	18, // 15: shardmanagerpb.ShardService.UpdateShardStatus:input_type -> shardmanagerpb.UpdateShardStatusRequest
	20, // 16: shardmanagerpb.PolicyService.SetPolicy:input_type -> shardmanagerpb.SetPolicyRequest
	22, // 17: shardmanagerpb.PolicyService.GetPolicy:input_type -> shardmanagerpb.GetPolicyRequest
	24, // 18: shardmanagerpb.MonitoringService.GetDistribution:input_type -> shardmanagerpb.GetDistributionRequest
	27, // 19: shardmanagerpb.MonitoringService.GetHealth:input_type -> shardmanagerpb.GetHealthRequest
	29, // 20: shardmanagerpb.FailureService.ReportFailure:input_type -> shardmanagerpb.ReportFailureRequest
	3,  // 21: shardmanagerpb.NodeService.RegisterNode:output_type -> shardmanagerpb.RegisterNodeResponse
	5,  // 22: shardmanagerpb.NodeService.Heartbeat:output_type -> shardmanagerpb.HeartbeatResponse
	7,  // 23: shardmanagerpb.NodeService.ListNodes:output_type -> shardmanagerpb.ListNodesResponse
	9,  // 24: shardmanagerpb.ShardService.RegisterShard:output_type -> shardmanagerpb.RegisterShardResponse
	11, // 25: shardmanagerpb.ShardService.ListShards:output_type -> shardmanagerpb.ListShardsResponse
	13, // 26: shardmanagerpb.ShardService.GetShardInfo:output_type -> shardmanagerpb.GetShardInfoResponse
	15, // 27: shardmanagerpb.ShardService.AssignShard:output_type -> shardmanagerpb.AssignShardResponse
	17, // 28: shardmanagerpb.ShardService.MigrateShard:output_type -> shardmanagerpb.MigrateShardResponse
	19, // 29: shardmanagerpb.ShardService.UpdateShardStatus:output_type -> shardmanagerpb.UpdateShardStatusResponse
	21, // 30: shardmanagerpb.PolicyService.SetPolicy:output_type -> shardmanagerpb.SetPolicyResponse
	23, // 31: shardmanagerpb.PolicyService.GetPolicy:output_type -> shardmanagerpb.GetPolicyResponse
	25, // 32: shardmanagerpb.MonitoringService.GetDistribution:output_type -> shardmanagerpb.GetDistributionResponse
	28, // 33: shardmanagerpb.MonitoringService.GetHealth:output_type -> shardmanagerpb.GetHealthResponse
	30, // 34: shardmanagerpb.FailureService.ReportFailure:output_type -> shardmanagerpb.ReportFailureResponse
	21, // [21:35] is the sub-list for method output_type
	7,  // [7:21] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_shardmanager_proto_init() }
func file_shardmanager_proto_init() {
	if File_shardmanager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shardmanager_proto_rawDesc), len(file_shardmanager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_shardmanager_proto_goTypes,
		DependencyIndexes: file_shardmanager_proto_depIdxs,
		MessageInfos:      file_shardmanager_proto_msgTypes,
	}.Build()
	File_shardmanager_proto = out.File
	file_shardmanager_proto_goTypes = nil
	file_shardmanager_proto_depIdxs = nil
}
